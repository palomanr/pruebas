# Settings for Hazelcast - https://github.com/hazelcast/charts/blob/master/stable/hazelcast/values.yaml
# The Gateway currently supports Hazelcast 3.x servers
hazelcast:
  enabled: true
  external: false
  image:
    # repository is the Hazelcast image name
    repository: "hazelcast/hazelcast"
    # tag is the Hazelcast image tag
    tag: "3.12.8"
    pullPolicy: IfNotPresent

  # Cluster settings
  cluster:
    # memberCount is the number Hazelcast members
    memberCount: 3

  # Hazelcast properties
  hazelcast:
    # javaOpts are additional JAVA_OPTS properties for Hazelcast member
    javaOpts:
    # loggingLevel is the level of Hazelcast logs (SEVERE, WARNING, INFO, CONFIG, FINE, FINER, and FINEST)
    # Note that changing this value requires setting securityContext.runAsUser to 0 and securityContext.readOnlyRootFilesystem to false
    # loggingLevel:
    # existingConfigMap defines a ConfigMap which contains Hazelcast configuration file(s) that are used instead of hazelcast.yaml configuration below
    # existingConfigMap:
    # yaml is the Hazelcast YAML configuration file
    yaml:
      hazelcast:
        network:
          join:
            multicast:
              enabled: false
            kubernetes:
              enabled: true
              service-name: ${serviceName}
              namespace: ${namespace}
              #service-dns: ${serviceName}.${namespace}.svc.cluster.local
              resolve-not-ready-addresses: true
          rest-api:
            enabled: true
            endpoint-groups:
              HEALTH_CHECK:
                enabled: true
    # configurationFiles are any additional Hazelcast configuration files
    # configurationFiles:

  # Hazelcast Service properties
  service:
    # Specifies whether a Service should be created
    create: true
    # type defines the Kubernetes service type ('ClusterIP', 'LoadBalancer', or 'NodePort')
    type: ClusterIP
    # port is the Kubernetes service port
    port: 5701
    # Static NodePort, if set.
    #nodePort: 30100

    # clusterIP set to None makes the service headless
    # It is required if DNS Lookup is used (https://github.com/hazelcast/hazelcast-kubernetes#dns-lookup)
    clusterIP: None


  # customVolume is the configuration for any volume mounted as '/data/custom/' (e.g. to mount a volume with custom JARs)
  # customVolume:

  # Hazelcast Management Center application properties
  mancenter:
    # enabled is a flag to enable Management Center application
    enabled: false

service:
  # Service Type, ClusterIP, NodePort, LoadBalancer
  type: ClusterIP
  ports:
    - name: https
      internal: 8443
      external: 8443
    - name: management
      internal: 9443
      external: 9443
  # Additional Service annotations, the example below shows configuration for an internal load balancer on GCP
  # See the docs for more ==> https://kubernetes.io/docs/concepts/services-networking/service/
  annotations: {}

# This project does not currently support Google's GCE controller.
# The default way to expose the Gateway is via L4 Load Balancer because it goes far beyond the HTTP(S) limitation ingress currently imposes
# Certificates are not created here, please specify an existing cert secret to use if enabling TLS
ingress:
  # Set to true to create ingress object
  enabled: true
  class: nginx
  # Ingress annotations
  annotations:
  # Ingress class
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/session-cookie-name: route
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1

  # When the ingress is enabled, a host pointing to this will be created
  # By default clusterHostname is used, only set this if you want to use a different host
  hostname: my-ssg.app.test.net
  ## The port that you want to route to via ingress. This needs to be available via service.ports.
  port: https
  ## Enable TLS configuration for the hostname defined at ingress.hostname/clusterHostname parameter
  tls: false
  secretName:
